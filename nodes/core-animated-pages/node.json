{
  "name": "core-animated-pages",
  "ns": "polymer",
  "type": "polymer",
  "description": "\n\n`core-animated-pages` selects one of its children \"pages\" to show and runs a transition\nwhen switching between them. The transitions are designed to be pluggable, and can\naccept any object that is an instance of a `core-transition-pages`. Transitions to run\nare specified in the `transitions` attribute as a space-delimited string of `id`s of\ntransition elements. Several transitions are available with `core-animated-pages` by\ndefault, including `hero-transition`, `cross-fade`, and `tile-cascade`.\n\nExample:\n\n    <style>\n      #hero1 {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 300px;\n        height: 300px;\n        background-color: orange;\n      }\n      #hero2 {\n        position: absolute;\n        top: 200px;\n        left: 300px;\n        width: 300px;\n        height: 300px;\n        background-color: orange;\n      }\n      #bottom1, #bottom2 {\n        position: absolute;\n        bottom: 0;\n        top: 0;\n        left: 0;\n        height: 50px;\n      }\n      #bottom1 {\n        background-color: blue;\n      }\n      #bottom2 {\n        background-color: green;\n      }\n    </style>\n    // hero-transition and cross-fade are declared elsewhere\n    <core-animated-pages transitions=\"hero-transition cross-fade\">\n      <section id=\"page1\">\n        <div id=\"hero1\" hero-id=\"hero\" hero></div>\n        <div id=\"bottom1\" cross-fade></div>\n      </section>\n      <section id=\"page2\">\n        <div id=\"hero2\" hero-id=\"hero\" hero></div>\n        <div id=\"bottom2\" cross-fade></div>\n      </section>\n    </core-animated-pages>\n\nIn the above example, two transitions (`hero-transition` and `cross-fade`) are run when switching\nbetween `page1` and `page2`. `hero-transition` transforms elements with the same `hero-id` such\nthat they appear to be shared across different pages. `cross-fade` fades out the elements marked\n`cross-fade` in the outgoing page, and fades in those in the incoming page. See the individual\ntransition's documentation for specific details.\n\nFinding elements to transition\n------------------------------\n\nIn general, a transition is applied to elements marked with a certain attribute. For example,\n`hero-transition` applies the transition on elements with the `hero` and `hero-id` attribute.\nAmong the transitions included with `core-animated-pages`, script-based transitions such as\n`hero-transition` generally look for elements up to one level of shadowRoot from the\n`core-animated-pages` element, and CSS-based transitions such as `cross-fade` look for elements\nwithin any shadowRoot within the `core-animated-pages` element. This means you can use \ncustom elements as pages and mark elements in their shadowRoots as heroes, or mark \nelements in deeper shadowRoots with other transitions.\n\nExample:\n\n    <polymer-element name=\"x-el\" noscript>\n    <template>\n      <style>\n        #hero {\n          position: absolute;\n          top: 0;\n          right: 0;\n          width: 50px;\n          height: 300px;\n          background-color: blue;\n        }\n      </style>\n      <div id=\"hero\" hero-id=\"bar\" hero></div>\n    </template>\n    </polymer-element>\n\n    <polymer-element name=\"x-page-1\" noscript>\n    <template>\n      <style>\n        #hero1 {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 300px;\n          height: 300px;\n          background-color: orange;\n        }\n      </style>\n      <div id=\"hero1\" hero-id=\"foo\" hero></div>\n      <div id=\"hero2\" hero-id=\"bar\" hero></div>\n    </template>\n    </polymer-element>\n\n    <polymer-element name=\"x-page-2\" noscript>\n    <template>\n      <style>\n        #hero1 {\n          position: absolute;\n          top: 200px;\n          left: 300px;\n          width: 300px;\n          height: 300px;\n          background-color: orange;\n        }\n        #hero2 {\n          background-color: blue;\n          height: 150px;\n          width: 400px;\n        }\n      </style>\n      // The below element is one level of shadow from the core-animated-pages and will\n      // be transitioned.\n      <div id=\"hero1\" hero-id=\"foo\" hero></div>\n      // The below element contains a hero inside its shadowRoot making it two levels away\n      // from the core-animated-pages, and will not be transitioned.\n      <x-el></x-el>\n    </template>\n    </polymer-element>\n\n    <core-animated-pages transitions=\"hero-transition\">\n      <x-page-1></x-page-1>\n      <x-page-2></x-page-2>\n    </core-animated-pages>\n\nNote that the container element of the page does not participate in the transition.\n\n    // This does not work\n    <core-animated-pages transitions=\"cross-fade\">\n      <section cross-fade></section>\n      <section cross-fade></section>\n    </core-animated-pages>\n\n    // This works\n    <core-animated-pages transitions=\"cross-fade\">\n      <section>\n        <div cross-fade></div>\n      </section>\n      <section>\n        <div cross-fade></div>\n      </section>\n    </core-animated-pages>\n\nDynamically setting up transitions\n----------------------------------\n\nAn easy way to set up transitions dynamically is to use property binding on\nthe transition attributes. \n\nExample:\n\n    <core-animated-pages selected=\"{{selected}}\">\n      <section id=\"page1\">\n        <div hero-id=\"hero\" hero></div>\n      </section>\n      <section id=\"page2\">\n        <div id=\"foo\" hero-id=\"hero\" hero?=\"{{selected === 1 || selected === 0}}\" cross-fade=\"{{selected === 2}}\"></div>\n      </section>\n      <section id=\"page3\">\n      </section>\n    </core-animated-pages>\n\nIn the above example, the \"foo\" element only behaves as a hero element if transitioning between\n`#page1` and `#page2`. It gets cross-faded when transition to or from `#page3`.\n\nNesting pages\n-------------\n\nIt is possible to nest core-animated-pages elements for organization. Excessive nesting is\nnot encouraged, however, since it makes setting up the transition more complex.\n\nTo nest core-animated-pages, the page containing the nested core-animated-pages element should\nhave a `selectedItem` property bound to the `selectedItem` property of the nested element. This\nwill allow the outer core-animated-pages to know which nested page it is actually transitioning\nto.\n\nExample:\n\n    <polymer-element name=\"nested-page\" attributes=\"selectedItem\">\n    <template>\n      <core-animated-pages selectedItem=\"{{selectedItem}}\">\n        ...\n      </core-animated-pages>\n    </template>\n    </polymer-element>\n\n    <core-animated-pages>\n      <section id=\"page1\"></section>\n      <nested-page id=\"page2\"></nested-page>\n    </core-animated-pages>\n\n",
  "ports": {
    "input": {
      "transitions": {
        "name": "transitions",
        "description": "\nA space-delimited string of transitions to use when switching between pages in this element.\nThe strings are `id`s of `core-transition-pages` elements included elsewhere. See the\nindividual transition's document for specific details.\n\n",
        "type": "string",
        "default": "''"
      },
      "lastSelected": {
        "name": "lastSelected",
        "description": "\nThe last page selected. This property is useful to dynamically set transitions based\non incoming and outgoing pages.\n\n",
        "type": "Object",
        "default": "null"
      }
    },
    "output": {
      "core-animated-pages-transition-prepare": {
        "name": "core-animated-pages-transition-prepare",
        "description": "\nFired before a page transition occurs. Both pages involved in the transition are visible when\nthis event fires. This is useful if there is something the client needs to do when a page becomes\nvisible.\n\n"
      },
      "core-animated-pages-transition-end": {
        "name": "core-animated-pages-transition-end",
        "description": "\nFired when a page transition completes.\n\n"
      }
    }
  },
  "require": {
    "core-animated-pages": "github.com/Polymer/core-animated-pages/bower#master"
  }
}