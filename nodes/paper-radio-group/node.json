{
  "name": "paper-radio-group",
  "title": "Paper radio group",
  "ns": "polymer",
  "type": "polymer",
  "description": "`paper-radio-group` allows user to select only one radio button from a set.\nChecking one radio button that belongs to a radio group unchecks any \npreviously checked radio button within the same group. Use\n`selected` to get or set the selected radio button.\n\nExample:\n\n    <paper-radio-group selected=\"small\">\n      <paper-radio-button name=\"small\" label=\"Small\"></paper-radio-button>\n      <paper-radio-button name=\"medium\" label=\"Medium\"></paper-radio-button>\n      <paper-radio-button name=\"large\" label=\"Large\"></paper-radio-button>\n    </paper-radio-group>\n\nSee <a href=\"../paper-radio-button/\">paper-radio-button</a> for more\ninformation about `paper-radio-button`.",
  "dependencies": {
    "bower": {
      "paper-radio-group": "Polymer/paper-radio-group#master"
    }
  },
  "ports": {
    "input": {
      "noink": {
        "name": "noink",
        "description": "If true, ink ripple effect is disabled.",
        "type": "boolean",
        "default": false,
        "title": "Noink"
      },
      "nobar": {
        "name": "nobar",
        "description": "If true, the bottom bar to indicate the selected tab will not be shown.",
        "type": "boolean",
        "default": false,
        "title": "Nobar"
      },
      "noslide": {
        "name": "noslide",
        "description": "If true, the slide effect for the bottom bar is disabled.",
        "type": "boolean",
        "default": false,
        "title": "Noslide"
      },
      "scrollable": {
        "name": "scrollable",
        "description": "If true, tabs are scrollable and the tab width is based on the label width.",
        "type": "boolean",
        "default": false,
        "title": "Scrollable"
      },
      "disableDrag": {
        "name": "disableDrag",
        "description": "If true, dragging on the tabs to scroll is disabled.",
        "type": "boolean",
        "default": false,
        "title": "Disable drag"
      },
      "hideScrollButton": {
        "name": "hideScrollButton",
        "description": "If true, scroll buttons (left/right arrow) will be hidden for scrollable tabs.",
        "type": "boolean",
        "default": false,
        "title": "Hide scroll button"
      },
      "selectedItem": {
        "name": "selectedItem",
        "description": "Returns the currently selected element. In multi-selection this returns\nan array of selected elements.\nNote that you should not use this to set the selection. Instead use\n`selected`.",
        "type": "Object",
        "default": null,
        "title": "Selected item"
      },
      "selectedModel": {
        "name": "selectedModel",
        "description": "In single selection, this returns the model associated with the\nselected element.\nNote that you should not use this to set the selection. Instead use \n`selected`.",
        "type": "Object",
        "default": null,
        "title": "Selected model"
      },
      "selectedIndex": {
        "name": "selectedIndex",
        "description": "In single selection, this returns the selected index.\nNote that you should not use this to set the selection. Instead use\n`selected`.",
        "type": "number",
        "default": "-1",
        "title": "Selected index"
      },
      "excludedLocalNames": {
        "name": "excludedLocalNames",
        "description": "Nodes with local name that are in the list will not be included \nin the selection items.  In the following example, `items` returns four\n`core-item`'s and doesn't include `h3` and `hr`.\n\n    <core-selector excludedLocalNames=\"h3 hr\">\n      <h3>Header</h3>\n      <core-item>Item1</core-item>\n      <core-item>Item2</core-item>\n      <hr>\n      <core-item>Item3</core-item>\n      <core-item>Item4</core-item>\n    </core-selector>",
        "type": "string",
        "default": "",
        "title": "Excluded local names"
      },
      "target": {
        "name": "target",
        "description": "The target element that contains items.  If this is not set \ncore-selector is the container.",
        "type": "Object",
        "default": null,
        "title": "Target"
      },
      "itemsSelector": {
        "name": "itemsSelector",
        "description": "This can be used to query nodes from the target node to be used for \nselection items.  Note this only works if `target` is set\nand is not `core-selector` itself.\n\nExample:\n\n    <core-selector target=\"{{$.myForm}}\" itemsSelector=\"input[type=radio]\"></core-selector>\n    <form id=\"myForm\">\n      <label><input type=\"radio\" name=\"color\" value=\"red\"> Red</label> <br>\n      <label><input type=\"radio\" name=\"color\" value=\"green\"> Green</label> <br>\n      <label><input type=\"radio\" name=\"color\" value=\"blue\"> Blue</label> <br>\n      <p>color = {{color}}</p>\n    </form>",
        "type": "string",
        "default": "",
        "title": "Items selector"
      },
      "activateEvent": {
        "name": "activateEvent",
        "description": "The event that would be fired from the item element to indicate\nit is being selected.",
        "type": "string",
        "default": "tap",
        "title": "Activate event"
      },
      "notap": {
        "name": "notap",
        "description": "Set this to true to disallow changing the selection via the\n`activateEvent`.",
        "type": "boolean",
        "default": false,
        "title": "Notap"
      },
      "updateBar": {
        "name": "updateBar",
        "description": "Invoke this to update the size and position of the bottom bar.  Usually\nyou only need to call this if the `paper-tabs` is initially hidden and\nlater becomes visible.",
        "title": "Update bar",
        "async": true,
        "type": "object",
        "properties": {
          "wrapped": {
            "type": "boolean",
            "name": "wrapped",
            "description": "if true and it is already at the first item,",
            "title": "Wrapped"
          }
        }
      },
      "selectNext": {
        "name": "selectNext",
        "description": "Selects the next item.  This should be used in single selection only.\n\n                 wrap to the front",
        "title": "Select next",
        "async": true,
        "type": "object",
        "properties": {
          "wrapped": {
            "type": "boolean",
            "name": "wrapped",
            "description": "if true and it is already at the last item,",
            "title": "Wrapped"
          }
        }
      }
    },
    "output": {
      "core-select": {
        "name": "core-select",
        "description": "Fired when an item's selection state is changed. This event is fired both\nwhen an item is selected or deselected. The `isSelected` detail property\ncontains the selection state.",
        "title": "Core select",
        "type": "object",
        "properties": {
          "detail": {
            "type": "Object",
            "name": "detail",
            "title": "Detail",
            "properties": {
              "isSelected": {
                "type": "boolean",
                "name": "isSelected",
                "description": "true for selection and false for deselection",
                "title": "Is selected"
              },
              "item": {
                "type": "Object",
                "name": "item",
                "description": "the item element",
                "title": "Item"
              }
            }
          }
        }
      },
      "core-activate": {
        "name": "core-activate",
        "description": "Fired when an item element is tapped.",
        "title": "Core activate",
        "type": "object",
        "properties": {
          "detail": {
            "type": "Object",
            "name": "detail",
            "title": "Detail",
            "properties": {
              "item": {
                "type": "Object",
                "name": "item",
                "description": "the item element",
                "title": "Item"
              }
            }
          }
        }
      }
    }
  }
}